
import html2pdf from "html2pdf.js";
import dayjs from "dayjs";

const previewTaskPdfContentInNewWindow = (user, selectedDate, taskspdf) => {
  console.log(taskspdf); // Log task data

  const generateTaskList = (tasks) => {
    return tasks
      .map(
        (task, i) => `
           <li>
             ${++i} . <span style="text-decoration: ${task.DONE ? "line-through" : "none"}">${task.Task}</span>
           </li>
        `
      )
      .join("");
  };

  const htmlContent = `
    <!DOCTYPE html>
    <html>
    <head>
      <title>Task Report</title>
      <style>
         body {
           font-family: 'Helvetica Neue', Arial, sans-serif;
           color: #333;
         }
         h2, h3, h4 {
           color: #2c3e50;
         }
         .info-section {
           display: flex;
           justify-content: space-between;
           margin-bottom: 30px;
           padding-bottom: 10px;
         }
          .info-section .headbox{
            background-color: whitesmoke;
            padding:10px 20px;
            border-radius:10px;
          }
          .info-section .headbox p{
            margin:10px 0 ;
          }
         .info-section div {
           width: 45%;
         }
         .task-section {
           margin-bottom: 20px;
         }
         .task-section h3 {
           width:max-width;  
           color: black;
           padding: 10px;
           border-radius: 5px;
           margin-bottom: 10px;
         }
         .task-section ul {
           list-style: none;
           padding: 10px;
           background-color:whitesmoke;
           border-radius: 10px;
         }
         .task-section li {
           margin: 5px 0;
           padding: 0 10px;
           border-radius: 5px;
         }
         .footer {
           margin-top: 40px;
           text-align: center;
           font-size: 12px;
           color: #888;
         }
       </style>
     </head>
     <body>
       <h2>Task Report</h2><br/>
       <div class="info-section">
         <div class="headbox">
           <h4>User: ${taskspdf.UserName}</h4>
           <p>Date: ${selectedDate.format("DD-MM-YYYY")}</p>
           <h4>Total Tasks: ${taskspdf.Todaytotalrecord}</h4>
         </div>
         <div class="headbox">
           <h4>Productivity</h4>
           <p>Done: <span style="color:green ; font-weight:bold">${taskspdf.TodayPercentageDone}%</span></p>
           <p>Pending: <span style="color:red; font-weight:bold">${taskspdf.TodayRemaingingPercentage}%</span></p>
         </div>
       </div>
       ${taskspdf.Returngroups[0]?.returnTasks.length > 0
      ? `
        <div class="task-section">
          <h3>Business</h3>
          <ul style="border-left:5px solid #9c8bda">${generateTaskList(taskspdf.Returngroups[0].returnTasks)}</ul>
        </div>
      `
      : ""
    }

      ${taskspdf.Returngroups[1]?.returnTasks.length > 0
      ? `
        <div class="task-section">
          <h3 >Calls</h3>
          <ul  style="border-left:5px solid #f7a905">${generateTaskList(taskspdf.Returngroups[1].returnTasks)}</ul>
        </div>
      `
      : ""
    }

      ${taskspdf.Returngroups[2]?.returnTasks.length > 0
      ? `
        <div class="task-section">
          <h3 >Family</h3>
          <ul  style="border-left:5px solid #44bce2">${generateTaskList(taskspdf.Returngroups[2].returnTasks)}</ul>
        </div>
      `
      : ""
    }

      ${taskspdf.Returngroups[3]?.returnTasks.length > 0
      ? `
        <div class="task-section">
          <h3 >Other</h3>
          <ul  style="border-left:5px solid #ff7676">${generateTaskList(taskspdf.Returngroups[3].returnTasks)}</ul>
        </div>
      `
      : ""
    }

      <div class="footer">
        <p>Generated by ActoToDo List</p>
      </div>
    </body>
    </html>
  `;

  // Convert HTML to PDF and download it
  const opt = {
    margin: 1,
    filename: `Task_Report_${selectedDate.format("DD-MM-YYYY")}.pdf`,
    image: { type: 'jpeg', quality: 0.90 },
    html2canvas: { scale: 10 },
    jsPDF: { unit: 'in', format: 'letter', orientation: 'portrait' }
  };

  // Create a temporary container for the HTML content
  const tempContainer = document.createElement("div");
  tempContainer.innerHTML = htmlContent;
  document.body.appendChild(tempContainer);

  // Convert the HTML to PDF
  html2pdf().from(tempContainer).set(opt).save().finally(() => {
    // Remove the temporary container after PDF generation
    document.body.removeChild(tempContainer);
  });
};

export default previewTaskPdfContentInNewWindow;
